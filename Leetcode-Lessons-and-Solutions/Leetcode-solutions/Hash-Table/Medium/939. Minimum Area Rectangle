class Solution {
    public int minAreaRect(int[][] points) {
        int min = Integer.MAX_VALUE;
        int n = points.length;
        Map<Integer, List<Integer>> map = new HashMap();
        
        for(int i = 0; i < n; i++){
            if(map.get(points[i][0]) == null)
                map.put(points[i][0], new ArrayList<Integer>());
            
        map.get(points[i][0]).add(points[i][1]);
            
        }
        
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if( i != j){
                   int[] pointA = points[i];
                    int[] pointB = points[j];
                    if(pointA[1] == pointB[1]){
                        for(int k : map.get(pointA[0])){
                            if(map.get(pointB[0]).contains(k) && k != pointA[1])
                                min = Math.min(min, Math.abs(pointA[0] - pointB[0]) * Math.abs(pointA[1]-k));
                        }
                    }
                }
            }
        }
        
        return (min == Integer.MAX_VALUE) ? 0 : min;
    }
}
