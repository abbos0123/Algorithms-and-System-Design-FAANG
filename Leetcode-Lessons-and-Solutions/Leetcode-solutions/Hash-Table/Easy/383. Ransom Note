class Solution {
     public boolean canConstruct(String ransomNote, String magazine) {
       Map<Character, Integer> map = new HashMap<>();
        
        if (ransomNote.length() > magazine.length())
               return false;
         
        for (int i = 0; i < magazine.length(); i++) {
            if (map.get(magazine.charAt(i)) == null) {
                map.put(magazine.charAt(i), 1);
            } else {
                map.put(magazine.charAt(i), map.get(magazine.charAt(i)) + 1);
            }

            if (i < ransomNote.length()) {
                if (map.get(ransomNote.charAt(i)) == null) {
                    map.putIfAbsent(ransomNote.charAt(i), -1);
                } else {
                    map.put(ransomNote.charAt(i), map.get(ransomNote.charAt(i)) - 1);
                }
            }
        }
        var list= map.values().stream().toList();
        for (Integer integer : list) {
            if (integer != null && integer < 0)
                return false;
        }
        return true;
    }
}
