class Solution {
       public int[] intersect(int[] nums1, int[] nums2) {
        Map<Integer, Integer> map1 = new HashMap<>();
        Map<Integer, Integer> map2 = new HashMap<>();
        List<Integer> list = new ArrayList<>();

        for (int i = 0; i < nums1.length; i++) {
            map1.putIfAbsent(nums1[i],0);
            map1.put(nums1[i], map1.get(nums1[i]) + 1);
        }

        for (int i = 0; i < nums2.length; i++) {
            map2.putIfAbsent(nums2[i],0);
            map2.put(nums2[i], map2.get(nums2[i]) + 1);
        }
        Iterator<Integer> iterator = map2.keySet().iterator();
        int n;

        while (iterator.hasNext()){
            n = iterator.next();
            if (map1.containsKey(n)){
                int min = Math.min(map1.get(n), map2.get(n));

                for (int i = 0; i < min; i++)
                    list.add(n);
            }
        }

          int[] resut = new int[list.size()];
        int p = 0;
        for (Integer integer : list) {
          resut[p++] = integer;
        }
           
        return resut;
    }

}
