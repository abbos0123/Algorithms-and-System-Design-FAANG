---------------------------------Complexity-----------------------------------
Time complexity: O(n)
Space complexity: O(n)

-----------------------------------Code---------------------------------------
class Solution {
    public int countLargestGroup(int n) {
        Map<Integer, Integer> map = new HashMap();
        int key  = -1;
        int maxCount = 0, max = -1;

        for(int i = 1; i <= n; i++){
            key = countDigits(i);
            map.put(key, map.getOrDefault(key, 0) + 1);
        }

        for(int k : map.keySet()){
            if(map.get(k) > max){
                max = map.get(k);
                maxCount = 1;
            }else if(map.get(k) == max){
                maxCount++;
            }
        }

        return maxCount;
    }

    private int countDigits(int n){
        int sum = 0;

        while( n > 0){
            sum += n % 10;
            n /= 10;
        }
        return sum;
    }
}
