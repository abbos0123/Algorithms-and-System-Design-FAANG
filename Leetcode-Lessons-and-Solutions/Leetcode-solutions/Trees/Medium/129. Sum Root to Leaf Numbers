Complexity
Time complexity: O(n)
Space complexity: O(n)
Code
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int result = 0;
    public int sumNumbers(TreeNode root) {
        sum(root, 0);

        return result;
    }

    private void sum(TreeNode root, int sum){
        if(root == null) return;

        if(root.left == null && root.right == null){
             sum *= 10;
             sum += root.val;
            result += sum;
            return;
        }

        sum *= 10;
        sum += root.val;

        sum(root.left, sum);
        sum(root.right, sum);
        
        sum -= root.val;
        sum /= 10;
    }
}
