
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {

        List<Integer> list = new LinkedList<Integer>();
        isBTS(root,list);        
        int n = list.size();
        for(int i=1; i<n; i++){
            if(list.get(i-1)>=list.get(i)) return false;
        }
        return true;
    }

    public void isBTS(TreeNode root, List<Integer> list){

      if(root == null) return;
      isBTS(root.left, list);
      list.add(root.val);
      isBTS(root.right, list);
    }
}


https://leetcode.com/problems/validate-binary-search-tree/ 
