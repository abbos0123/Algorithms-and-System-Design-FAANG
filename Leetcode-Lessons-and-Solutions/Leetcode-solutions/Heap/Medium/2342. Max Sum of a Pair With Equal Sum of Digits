class Solution {
    // 0 - declare variables 
    // 1 -sort decreasing order by sum of digits
    // find - max 
    
    public int maximumSum(int[] nums) {
        int[][] matrix = new int[nums.length][2];
        int max = -1;
        
        for(int i = 0; i < nums.length; i++){
            matrix[i][0] = nums[i];
            matrix[i][1] = sumDigit(nums[i]);
        }
        
         Arrays.sort(matrix, new Comparator<>(){
             @Override 
             public int compare(int[] num1, int[] num2){
                return  num2[1] == num1[1] ? num2[0] - num1[0]: num2[1] - num1[1];
                 
             }
         });
            
        for(int i = 1; i < nums.length; i++)
            if(matrix[i][1] == matrix[i-1][1])
                max = Math.max(max, matrix[i][0] + matrix[i-1][0]);
            
        return max;
    }
    
    private int sumDigit(int n){
        int sum = 0;
       
        while (n > 0){
            sum += n % 10;
            n /= 10;
        }
        
        return sum;
    }
}
