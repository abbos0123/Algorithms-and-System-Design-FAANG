class SmallestInfiniteSet {
    int last = 1;
    int low = 0;
    HashMap<Integer, Boolean> hashMap;
    PriorityQueue<Integer> pq;

    public SmallestInfiniteSet() {
        hashMap = new HashMap();
        pq = new PriorityQueue();
    }
    
    public int popSmallest() {
        while(true){
            if(hashMap.get(last) == null ||  !hashMap.get(last)){
                pq.add(last);
                hashMap.put(last, true);
                last++;
                break;
            }else{
                last++;
            }
        }

        Integer res  = pq.poll();
        hashMap.put(res, false);
        return res;
    }
    
    public void addBack(int num) {
        if(hashMap.get(num) == null || !hashMap.get(num)){
            pq.add(num);
            hashMap.put(num, true);
        }
    }
}
